<?xml version="1.0" encoding="UTF-8"?>   
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-2.5.xsd  
        http://dubbo.apache.org/schema/dubbo   
       	http://dubbo.apache.org/schema/dubbo/dubbo.xsd   
        ">

    <dubbo:application name="${app-name}" />
  
    <!-- 使用nacos注册中心暴露服务地址 -->  
    <dubbo:registry protocol="nacos" id="local" />  
  
    <!-- 用dubbo协议暴露服务 -->  
    <dubbo:protocol name="dubbo" heartbeat="5000" />
    
    <!--      从注册中心发现监控中心        -->
<!--     <dubbo:monitor protocol="registry"/> -->

    <!-- 使用注解方式暴露接口 -->     
    <dubbo:annotation package="com.qiuxs" />
      
    <!-- 加入spring注解扫描 -->  
    <context:component-scan base-package="com.qiuxs"/>
    
    <!--      增加记录API调用日志、传送用户上下文数据消费者端拦截器。启动时不检查提供者是否存在。        -->
    <!-- <dubbo:consumer filter="apiLogCustomerDubboFilter,userContextCustomerDubboFilter" check="false" /> -->
    
    <!--      去除default里的ExceptionFilter，重试次数设置为0，增加记录API调用日志、接收用户上下文数据提供者端拦截器     -->
    <!-- <dubbo:provider filter="apiLogProviderDubboFilter,userContextProviderDubboFilter,-exception" registry="local" export="false" /> -->

</beans>
